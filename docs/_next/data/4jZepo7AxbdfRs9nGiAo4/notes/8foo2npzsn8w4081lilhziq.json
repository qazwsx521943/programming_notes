{"pageProps":{"note":{"id":"8foo2npzsn8w4081lilhziq","title":"State","desc":"","updated":1703398059966,"created":1703397701306,"custom":{},"fname":"programming.language.swift.framework.SwiftUI.property wrappers.state","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"3806ab64f0ac4dd848f13936040a1f8f","links":[],"anchors":{"what-is-state":{"type":"header","text":"What is @State?","value":"what-is-state","line":8,"column":0,"depth":2},"when-to-use-it":{"type":"header","text":"When to use it?","value":"when-to-use-it","line":12,"column":0,"depth":2},"behind-the-scene":{"type":"header","text":"Behind the scene","value":"behind-the-scene","line":16,"column":0,"depth":2}},"children":[],"parent":"2v31mamk1fjl6km26amg70u","data":{}},"body":"<h1 id=\"state\">State<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#state\"></a></h1>\n<h2 id=\"what-is-state\">What is <code>@State</code>?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what-is-state\"></a></h2>\n<blockquote>\n<p>A property wrapper type that can read and write a value managed by SwiftUI.</p>\n</blockquote>\n<h2 id=\"when-to-use-it\">When to use it?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#when-to-use-it\"></a></h2>\n<blockquote>\n<p>Use state as the single source of truth for a given value type that you store in a view hierarchy. Create a state value in an <code>App</code>, <code>Scene</code>, or <code>View</code> by applying the <code>@State</code> attribute to a property declaration and providing an initial value</p>\n</blockquote>\n<h2 id=\"behind-the-scene\">Behind the scene<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#behind-the-scene\"></a></h2>\n<blockquote>\n<p>SwiftUI manages the property's storage. When the value changes, SwiftUI updates the parts of the view hierarchy that depend on the value. To access a state's underlying value, you use its <code>wrappedValue</code> property. However, as a shortcut Swift enables you to access the wrapped value by referring directly to the state instance.</p>\n</blockquote>\n<p>SwiftUI 中每個View都是以struct定義的，由於struct中的property是immutable，如果我們有一個variable是會改變的，而每次改變時我們希望View會重繪，那這時候我們就可以用<code>@State</code>這個SwiftUI定義好的property wrapper。當我們更改這個以<code>@State</code>定義的variable，SwiftUI就會幫我們更新View。</p>\n<p>在struct中宣告變數加上<code>@State</code>前綴，SwiftUI會將這個變數管理在一個shared storage(Redux like)，讓我們在View的重繪時不會遺失這個變數。</p>\n<p>從SwiftUI documentation可以看到<code>@State</code>定義的一些public property：</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token attribute atrule\">@propertyWrapper</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">Value</span><span class=\"token operator\">></span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">DynamicProperty</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>wrappedValue value<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Value</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>initialValue value<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Value</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> wrappedValue<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Value</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span> <span class=\"token keyword\">nonmutating</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> projectedValue<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Binding</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">Value</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">protocol</span> <span class=\"token class-name\">DynamicProperty</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">/// Updates the underlying value of the stored value.</span>\n    <span class=\"token comment\">///</span>\n    <span class=\"token comment\">/// SwiftUI calls this function before rendering a view's</span>\n    <span class=\"token comment\">/// ``View/body-swift.property`` to ensure the view has the most recent</span>\n    <span class=\"token comment\">/// value.</span>\n    <span class=\"token keyword\">mutating</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>","noteIndex":{"id":"root","title":"My Second Brain","desc":"","updated":1703770799412,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"66e8bf2de7e5700b63cac4ef4be9ef9c","links":[],"anchors":{"welcome-to-my-learning-repository-":{"type":"header","text":"Welcome to my learning repository! 📚","value":"welcome-to-my-learning-repository-","line":8,"column":0,"depth":2}},"children":["p1jj2aztluo4pb12qn8gunp","avquk6puzxi790rxzodnfmh","rn0e0y5coqo8iyqfxd7ocsk"],"parent":null,"data":{},"body":"\n## Welcome to my learning repository! 📚\n\n**Disclaimer:**\n\nThe content in this repository is a work in progress and should not be considered an authoritative source of information. These notes are currently being compiled during my learning journey at AppWorks School. They are subject to change, and there may be gaps in organization and accuracy.\n\n**Note Status:**\n\nI am actively working on organizing and rectifying any inaccuracies. Expect a more comprehensive set of notes by 2024/01/19.\n\nFeel free to connect with me and share your thoughts or suggestions regarding my note-taking process. I appreciate any feedback and collaboration to enhance the quality of these notes.\n\nHappy learning! 🚀"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://qazwsx521943.github.io","assetsPrefix":"/programming_notes","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}