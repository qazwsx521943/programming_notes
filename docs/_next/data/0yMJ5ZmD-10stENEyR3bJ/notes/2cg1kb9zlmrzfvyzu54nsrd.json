{"pageProps":{"note":{"id":"2cg1kb9zlmrzfvyzu54nsrd","title":"Structures Vs Classes","desc":"","updated":1704124179224,"created":1703728237903,"custom":{},"fname":"programming.language.swift.types.structures vs classes","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"b3e77d09b1183f2a4a28d213989b8acf","links":[],"anchors":{"definition-syntax":{"type":"header","text":"Definition Syntax","value":"definition-syntax","line":10,"column":0,"depth":2},"examples":{"type":"header","text":"Examples","value":"examples","line":22,"column":0,"depth":2},"pass-by-value-vs-pass-by-reference":{"type":"header","text":"Pass by value vs Pass by reference","value":"pass-by-value-vs-pass-by-reference","line":46,"column":0,"depth":2},"coa":{"type":"header","text":"CoA","value":"coa","line":48,"column":0,"depth":3},"cow":{"type":"header","text":"CoW","value":"cow","line":68,"column":0,"depth":3},"both-can":{"type":"header","text":"Both can:","value":"both-can","line":112,"column":0,"depth":2},"class-特性":{"type":"header","text":"Class 特性:","value":"class-特性","line":119,"column":0,"depth":2},"what-apple-says":{"type":"header","text":"What apple says","value":"what-apple-says","line":150,"column":0,"depth":2},"heap-summary":{"type":"header","text":"Heap Summary","value":"heap-summary","line":156,"column":0,"depth":3},"stack-summary":{"type":"header","text":"Stack Summary","value":"stack-summary","line":166,"column":0,"depth":3},"situations-when-choosing-different-data-types":{"type":"header","text":"Situations when choosing different data types","value":"situations-when-choosing-different-data-types","line":171,"column":0,"depth":2},"comparison":{"type":"header","text":"Comparison","value":"comparison","line":183,"column":0,"depth":2}},"children":[],"parent":"mr2culexmtziuklrq2gt22f","data":{}},"body":"<h1 id=\"structures-vs-classes\">Structures Vs Classes<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#structures-vs-classes\"></a></h1>\n<p>在swift語言中，用struct跟class宣告的custom type能達到幾乎一樣的功能。</p>\n<h2 id=\"definition-syntax\">Definition Syntax<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#definition-syntax\"></a></h2>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">SomeStructure</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeClass</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"examples\">Examples<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#examples\"></a></h2>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">LocationStruct</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> latitude<span class=\"token punctuation\">:</span> <span class=\"token class-name\">CGFloat</span>\n    <span class=\"token keyword\">var</span> longitude<span class=\"token punctuation\">:</span> <span class=\"token class-name\">CGFloat</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LocationClass</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> latitude<span class=\"token punctuation\">:</span> <span class=\"token class-name\">CGFloat</span>\n    <span class=\"token keyword\">var</span> longitude<span class=\"token punctuation\">:</span> <span class=\"token class-name\">CGFloat</span>\n\n    <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>latitude<span class=\"token punctuation\">:</span> <span class=\"token class-name\">CGFloat</span><span class=\"token punctuation\">,</span> longitude<span class=\"token punctuation\">:</span> <span class=\"token class-name\">CGFloat</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>latitude <span class=\"token operator\">=</span> latitude\n       <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>longitude <span class=\"token operator\">=</span> longitude\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> locationStruct <span class=\"token operator\">=</span> <span class=\"token class-name\">LocationStruct</span><span class=\"token punctuation\">(</span>latitude<span class=\"token punctuation\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> longitude<span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> locationClass <span class=\"token operator\">=</span> <span class=\"token class-name\">LocationClass</span><span class=\"token punctuation\">(</span>latitude<span class=\"token punctuation\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> longitude<span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h2 id=\"pass-by-value-vs-pass-by-reference\"><strong>Pass by value</strong> vs <strong>Pass by reference</strong><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pass-by-value-vs-pass-by-reference\"></a></h2>\n<h3 id=\"coa\">CoA<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#coa\"></a></h3>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">PersonStruct</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n    <span class=\"token keyword\">var</span> age<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> firstPerson <span class=\"token operator\">=</span> <span class=\"token class-name\">PersonStruct</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"StructPerson\"</span></span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> secondPerson <span class=\"token operator\">=</span> firstPerson\n\nfirstPerson<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"StructPersonModified\"</span></span>\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>firstPerson<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>secondPerson<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">getStackAddress</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">:</span> <span class=\"token operator\">&#x26;</span>firstPerson<span class=\"token punctuation\">)</span>\n<span class=\"token function\">getStackAddress</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">:</span> <span class=\"token operator\">&#x26;</span>secondPerson<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"cow\">CoW<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#cow\"></a></h3>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> personStructArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token class-name\">PersonStruct</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"TOYX\"</span></span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">PersonStruct</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"TOYY\"</span></span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">PersonStruct</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"TOYZ\"</span></span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">var</span> personStructArrayCopy <span class=\"token operator\">=</span> personStructArray\n\n<span class=\"token function\">getStackAddress</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">:</span> <span class=\"token operator\">&#x26;</span>personStructArray<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token function\">getStackAddress</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">:</span> <span class=\"token operator\">&#x26;</span>personStructArrayCopy<span class=\"token punctuation\">)</span>\n\npersonStructArray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"TOYA\"</span></span>\n\n<span class=\"token function\">getStackAddress</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">:</span> <span class=\"token operator\">&#x26;</span>personStructArray<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token function\">getStackAddress</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">:</span> <span class=\"token operator\">&#x26;</span>personStructArrayCopy<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img src=\"/programming_notes/../assets/images/programming.language.swift.Types.value-type.png\" alt=\"value type\"></p>\n<p>Reference</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PersonClass</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n    <span class=\"token keyword\">var</span> age<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span>\n\n    <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> thirdPerson <span class=\"token operator\">=</span> <span class=\"token class-name\">PersonClass</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"ClassPerson\"</span></span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> fourthPerson <span class=\"token operator\">=</span> thirdPerson\n\nthirdPerson<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"ClassPersonModified\"</span></span>\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>thirdPerson<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>fourthPerson<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>thirdPerson <span class=\"token operator\">===</span> fourthPersonec<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img src=\"/programming_notes/../assets/images/programming.language.swift.Types.reference-type.png\" alt=\"reference type\"></p>\n<h2 id=\"both-can\">Both can:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#both-can\"></a></h2>\n<ul>\n<li>定義store properties, computed properties</li>\n<li>定義methods</li>\n<li>用extension來擴展他們的功能</li>\n<li>定義subscripts，讓我們可以透過<code>[]</code>的方式取得值</li>\n</ul>\n<h2 id=\"class-特性\">Class 特性:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#class-特性\"></a></h2>\n<ul>\n<li>\n<p>繼承</p>\n</li>\n<li>\n<p>生命週期由ARC管理</p>\n</li>\n<li>\n<p>Dynamic dispatch(type casting)</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"animals can eat\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"dogs can eat\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">onlyDog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"only dog can call\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> animal<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Animal</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nanimal<span class=\"token punctuation\">.</span><span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> dog <span class=\"token operator\">=</span> animal <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> <span class=\"token class-name\">Dog</span> <span class=\"token punctuation\">{</span>\n  dog<span class=\"token punctuation\">.</span><span class=\"token function\">onlyDog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n</ul>\n<h2 id=\"what-apple-says\">What apple says<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what-apple-says\"></a></h2>\n<blockquote>\n<p>The additional capabilities that classes support come at the cost of increased complexity. As a general guideline, prefer structures because they’re easier to reason about, and use classes when they’re appropriate or necessary. In practice, this means most of the custom types you define will be structures and enumerations.</p>\n</blockquote>\n<p>如果我們沒有要使用到class比struct多擁有的特性，我們在開發的時候建議都以struct、enum建立Type，因為他們比較好local reason，可以確保程式碼的可讀性、維護性。</p>\n<h3 id=\"heap-summary\">Heap Summary<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#heap-summary\"></a></h3>\n<ul>\n<li>More dynamic but less efficient than stack.</li>\n<li>Goes through 3 steps:\n<ol>\n<li>allocation</li>\n<li>tracking reference count</li>\n<li>deallocation</li>\n</ol>\n</li>\n<li>Heap memory allocation is done for objects whose size can not be calculated at compile time, plus all reference types(because reference types life time is not based on their defined scope).</li>\n<li>heap memory is somehow a global host for objects and all threads can have access to it, so the objects stored on it are not thread-safe</li>\n</ul>\n<h3 id=\"stack-summary\">Stack Summary<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#stack-summary\"></a></h3>\n<ul>\n<li>value types are all stored on the stack memory. Note that the value types should not have any reference types associated with them(i.e. they are either not contained by or contain a reference type) otherwise they wouldn’t be stored on the stack.</li>\n<li>The amount of memory needed is normally calculated at compile time since they are not dynamic and do not need reference count semantics to decide how long they have to live(They live in a scope and when they are used the memory will dump them)</li>\n</ul>\n<h2 id=\"situations-when-choosing-different-data-types\">Situations when choosing different data types<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#situations-when-choosing-different-data-types\"></a></h2>\n<ol>\n<li>\n<p>Structs:</p>\n<ol>\n<li>Data Models</li>\n<li>SwiftUI Views</li>\n</ol>\n</li>\n<li>\n<p>Classes:</p>\n<ol>\n<li>ViewModels</li>\n</ol>\n</li>\n<li>\n<p>Actors:</p>\n<ol>\n<li>Shared 'Manager' / 'Data Store'</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"comparison\">Comparison<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#comparison\"></a></h2>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>types</th><th align=\"center\">Struct</th><th align=\"center\">Class</th><th align=\"center\">Actor</th><th align=\"center\">Enum</th></tr></thead><tbody><tr><td>Stored in</td><td align=\"center\">Stack</td><td align=\"center\">Heap</td><td align=\"center\">Heap</td><td align=\"center\">Stack</td></tr><tr><td>copy by</td><td align=\"center\">Value</td><td align=\"center\">Reference</td><td align=\"center\">Reference</td><td align=\"center\">Value</td></tr><tr><td>Thread safe</td><td align=\"center\">V</td><td align=\"center\">X</td><td align=\"center\">V</td><td align=\"center\">V</td></tr><tr><td>Inheritance</td><td align=\"center\">X</td><td align=\"center\">V</td><td align=\"center\">X</td><td align=\"center\">X</td></tr></tbody></table></div>\n<p>References:</p>\n<ul>\n<li><a href=\"https://www.backblaze.com/blog/whats-the-diff-programs-processes-and-threads/\">https://www.backblaze.com/blog/whats-the-diff-programs-processes-and-threads/</a></li>\n</ul>","noteIndex":{"id":"root","title":"My Second Brain","desc":"","updated":1703774418339,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"ce2f2d82cf7fe71b3a5900a8f91fd111","links":[],"anchors":{"welcome-to-my-learning-repository-":{"type":"header","text":"Welcome to my learning repository! 📚","value":"welcome-to-my-learning-repository-","line":8,"column":0,"depth":2}},"children":["j416lb0sk2vag9yvgr9bxzb","ski4xep9sjz6v7rxjf1fln1","avquk6puzxi790rxzodnfmh","rn0e0y5coqo8iyqfxd7ocsk"],"parent":null,"data":{},"body":"\n## Welcome to my learning repository! 📚\n\n**Disclaimer:**\n\nThe content in this repository is a work in progress and should not be considered an authoritative source of information. These notes are currently being compiled during my learning journey at AppWorks School. They are subject to change, and there may be gaps in organization and accuracy.\n\n**Note Status:**\n\nI am actively working on organizing and rectifying any inaccuracies. Expect a more comprehensive set of notes by 2024/01/19.\n\n**Reading guide:**\n\n> Block quotes like this generally means this paragraph is quoted by official documentation.\n\n```swift\n// Example code is typically simplified and may not be practical in real-world scenarios.\n// It is created solely to aid my understanding of the underlying concepts related to a specific topic.\n```\n\nFeel free to connect with me and share your thoughts or suggestions regarding my note-taking process. I appreciate any feedback and collaboration to enhance the quality of these notes.\n\nHappy learning! 🚀"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://qazwsx521943.github.io","assetsPrefix":"/programming_notes","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}