{"pageProps":{"note":{"id":"rc44em7kcfzkyprtzidrtjs","title":"Data Structure","desc":"","updated":1702897389759,"created":1699313135493,"custom":{},"fname":"programming.language.swift.data flow","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"f78011281d05a9243fa16d2bbbaea48c","links":[],"anchors":{"what-does-conforming-to-codable-do":{"type":"header","text":"What does conforming to Codable do?","value":"what-does-conforming-to-codable-do","line":9,"column":0,"depth":2},"搭配-codingkeys-做-encode-decode":{"type":"header","text":"搭配 CodingKeys 做 encode, decode","value":"搭配-codingkeys-做-encode-decode","line":23,"column":0,"depth":2},"jsonserialization":{"type":"header","text":"JSONSerialization","value":"jsonserialization","line":27,"column":0,"depth":2},"decodable-vs-decoder-protocol":{"type":"header","text":"Decodable vs Decoder Protocol","value":"decodable-vs-decoder-protocol","line":31,"column":0,"depth":2}},"children":[],"parent":"vztg7xzj0425ae5ogmk8ds2","data":{}},"body":"<h1 id=\"data-structure\">Data Structure<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#data-structure\"></a></h1>\n<h2 id=\"what-does-conforming-to-codable-do\">What does conforming to <strong>Codable</strong> do?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what-does-conforming-to-codable-do\"></a></h2>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Landmark</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Codable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n    <span class=\"token keyword\">var</span> foundingYear<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span>\n\n    <span class=\"token comment\">// Landmark now supports the Codable methods init(from:) and encode(to:),</span>\n    <span class=\"token comment\">// even though they aren't written as part of its declaration.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>遵循Codable協議就可以在編碼或解碼資料時，將資料轉成swift的資料格式</p>\n<h2 id=\"搭配-codingkeys-做-encode-decode\">搭配 <strong>CodingKeys</strong> 做 encode, decode<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#搭配-codingkeys-做-encode-decode\"></a></h2>\n<p>如果api回傳的資料(encoded的格式)跟我們的struct定義不一致，我們可以提供自定義的encode, decode邏輯。</p>\n<h2 id=\"jsonserialization\">JSONSerialization<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#jsonserialization\"></a></h2>\n<blockquote>\n<p>An object that converts between JSON and the equivalent Foundation objects.</p>\n</blockquote>\n<h2 id=\"decodable-vs-decoder-protocol\"><code>Decodable</code> vs <code>Decoder</code> Protocol<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#decodable-vs-decoder-protocol\"></a></h2>\n<p><code>Decodable</code>是一個Protocol，並要求遵守的類必須提供一個<code>init()</code>，而這個<code>init</code>函式的唯一input是一個<code>Decoder</code>類</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">/// A type that can decode itself from an external representation.</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">protocol</span> <span class=\"token class-name\">Decodable</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">/// Creates a new instance by decoding from the given decoder.</span>\n    <span class=\"token comment\">///</span>\n    <span class=\"token comment\">/// This initializer throws an error if reading from the decoder fails, or</span>\n    <span class=\"token comment\">/// if the data read is corrupted or otherwise invalid.</span>\n    <span class=\"token comment\">///</span>\n    <span class=\"token comment\">/// - Parameter decoder: The decoder to read data from.</span>\n    <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>from decoder<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Decoder</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><code>Decoder</code>也是一個Protocol，我們使用遵守他的類來解碼payload。</p>\n<p>範例：</p>\n<p>當我們自定義Decoder的初始化函式時，我們透過<code>Decoder</code>實體的<code>container()</code> func拿到一個<code>KeyedDecodingContainer</code>的實體，並利用這個<code>container</code>的<code>decode()</code>來解碼payload。</p>\n<p>Ｑ： CodingKeys 扮演什麼角色？</p>\n<p>Ａ： Decoder呼叫container時需要傳入CodingKeys這個類，之後就可以透過container的<code>decode</code>去取值。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Decodable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n    <span class=\"token keyword\">let</span> age<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span>\n    <span class=\"token keyword\">let</span> gender<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n\n    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">CodingKeys</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">CodingKey</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> name\n        <span class=\"token keyword\">case</span> age\n        <span class=\"token keyword\">case</span> gender\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>from decoder<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Decoder</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">container</span><span class=\"token punctuation\">(</span>keyedBy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">CodingKeys</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> forKey<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> forKey<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Gender</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> forKey<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>gender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rawValue\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">Gender</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Decodable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> male\n    <span class=\"token keyword\">case</span> female\n<span class=\"token punctuation\">}</span>\n</code></pre>","noteIndex":{"id":"root","title":"root","desc":"","updated":1605266684036,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"b49e7e13a0c91addc8ab9ef97080cf1e","links":[],"anchors":{},"children":["p1jj2aztluo4pb12qn8gunp","avquk6puzxi790rxzodnfmh","rn0e0y5coqo8iyqfxd7ocsk","c1bs7wsjfbhb0zipaywqv1"],"parent":null,"data":{},"body":"\nThis is the root for your Dendron vault.\n\nIf you decide to publish your entire vault, it will be your landing page. You are free to customize any part of this page except the frontmatter at the top, between the `---`.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://qazwsx521943.github.io","assetsPrefix":"/programming_notes","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}