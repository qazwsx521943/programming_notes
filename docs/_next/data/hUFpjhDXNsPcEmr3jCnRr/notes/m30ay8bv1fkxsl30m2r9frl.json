{"pageProps":{"note":{"id":"m30ay8bv1fkxsl30m2r9frl","title":"Enumeration","desc":"","updated":1704144587178,"created":1703951656006,"custom":{},"fname":"programming.language.swift.Types.enumeration","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"f708a5680cb91ad6d2f7cf9b70ca0c7a","links":[],"anchors":{"enum-or-struct":{"type":"header","text":"enum or struct?","value":"enum-or-struct","line":8,"column":0,"depth":2},"use-cases":{"type":"header","text":"Use Cases","value":"use-cases","line":78,"column":0,"depth":2}},"children":[],"parent":"mr2culexmtziuklrq2gt22f","data":{}},"body":"<h1 id=\"enumeration\">Enumeration<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#enumeration\"></a></h1>\n<h2 id=\"enum-or-struct\">enum or struct?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#enum-or-struct\"></a></h2>\n<p>enum 非常適合表達可列舉的相關值。</p>\n<p>將這些相關值用 enum 表示有以下優點</p>\n<ul>\n<li>\n<p>Type Safety</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">enum</span> <span class=\"token class-name\">Direction</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> north\n    <span class=\"token keyword\">case</span> south\n    <span class=\"token keyword\">case</span> west\n    <span class=\"token keyword\">case</span> east\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// type safety -> compiler will check if the</span>\n<span class=\"token comment\">// input parameter is correct type</span>\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">decideDirection</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Direction</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> direction <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token punctuation\">.</span>north<span class=\"token punctuation\">:</span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"walk toward mountain\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">case</span> <span class=\"token punctuation\">.</span>south<span class=\"token punctuation\">:</span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"walk toward sea\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">case</span> <span class=\"token punctuation\">.</span>west<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span>east<span class=\"token punctuation\">:</span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"gg 3:0\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// can only check during run time</span>\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">decideDirection</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> direction <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string-literal\"><span class=\"token string\">\"north\"</span></span><span class=\"token punctuation\">:</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"walk toward mountain\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string-literal\"><span class=\"token string\">\"south\"</span></span><span class=\"token punctuation\">:</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"walk toward sea\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"gg 3:0\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">decideDirection</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>east<span class=\"token punctuation\">)</span>\n<span class=\"token function\">decideDirection</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"north\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">decideDirection</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"northh\"</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n</li>\n<li>\n<p>Readability &#x26; Maintainability: 減少其他人看code需要的通靈技能</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">enum</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token function\">mammal</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> legs<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">case</span> <span class=\"token function\">bird</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> wingspan<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">case</span> <span class=\"token function\">fish</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> lion <span class=\"token operator\">=</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">.</span><span class=\"token function\">mammal</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Lion\"</span></span><span class=\"token punctuation\">,</span> legs<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> eagle <span class=\"token operator\">=</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">.</span><span class=\"token function\">bird</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Eagle\"</span></span><span class=\"token punctuation\">,</span> wingspan<span class=\"token punctuation\">:</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> goldfish <span class=\"token operator\">=</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">.</span><span class=\"token function\">fish</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Goldfish\"</span></span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Gold\"</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n</li>\n<li>\n<p>Extensibility：可以輕鬆擴展 / 修改 case value</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">enum</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> <span class=\"token function\">mammal</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> legs<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">case</span> <span class=\"token function\">bird</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> wingspan<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">case</span> <span class=\"token function\">fish</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">case</span> <span class=\"token function\">reptile</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> scales<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Bool</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 新增爬蟲類型</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n</ul>\n<h2 id=\"use-cases\">Use Cases<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#use-cases\"></a></h2>\n<ol>\n<li>\n<p>表示狀態</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">enum</span> <span class=\"token class-name\">OrderStatus</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> pending\n    <span class=\"token keyword\">case</span> processing\n    <span class=\"token keyword\">case</span> shipped\n    <span class=\"token keyword\">case</span> delivered\n    <span class=\"token keyword\">case</span> cancelled\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n<li>\n<p>搭配<code>associated value</code>當作容器：</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// 1. 定義 Message 容器</span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Codable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Codable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> image\n        <span class=\"token keyword\">case</span> video\n        <span class=\"token keyword\">case</span> audio\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">case</span> <span class=\"token function\">text</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">case</span> <span class=\"token function\">media</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Data</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 2. 建立 Message instance</span>\n<span class=\"token keyword\">let</span> message<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Message</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Hello\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> imageMessage<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Message</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token function\">media</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 3. 取出 Message 容器內的 data</span>\n<span class=\"token function\">convertMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n<span class=\"token function\">convertMessage</span><span class=\"token punctuation\">(</span>imageMessage<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">convertMessage</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> message<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> message <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"this is a text message: </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">text</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">case</span> <span class=\"token keyword\">let</span> <span class=\"token punctuation\">.</span><span class=\"token function\">media</span><span class=\"token punctuation\">(</span>media<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"this is </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">media</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> message with Data: </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">payload</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n</ol>","noteIndex":{"id":"root","title":"My Second Brain","desc":"","updated":1703774418339,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"ce2f2d82cf7fe71b3a5900a8f91fd111","links":[],"anchors":{"welcome-to-my-learning-repository-":{"type":"header","text":"Welcome to my learning repository! 📚","value":"welcome-to-my-learning-repository-","line":8,"column":0,"depth":2}},"children":["j416lb0sk2vag9yvgr9bxzb","ski4xep9sjz6v7rxjf1fln1","avquk6puzxi790rxzodnfmh","rn0e0y5coqo8iyqfxd7ocsk"],"parent":null,"data":{},"body":"\n## Welcome to my learning repository! 📚\n\n**Disclaimer:**\n\nThe content in this repository is a work in progress and should not be considered an authoritative source of information. These notes are currently being compiled during my learning journey at AppWorks School. They are subject to change, and there may be gaps in organization and accuracy.\n\n**Note Status:**\n\nI am actively working on organizing and rectifying any inaccuracies. Expect a more comprehensive set of notes by 2024/01/19.\n\n**Reading guide:**\n\n> Block quotes like this generally means this paragraph is quoted by official documentation.\n\n```swift\n// Example code is typically simplified and may not be practical in real-world scenarios.\n// It is created solely to aid my understanding of the underlying concepts related to a specific topic.\n```\n\nFeel free to connect with me and share your thoughts or suggestions regarding my note-taking process. I appreciate any feedback and collaboration to enhance the quality of these notes.\n\nHappy learning! 🚀"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://qazwsx521943.github.io","assetsPrefix":"/programming_notes","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}