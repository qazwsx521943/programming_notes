{"pageProps":{"note":{"id":"mr2culexmtziuklrq2gt22f","title":"Types","desc":"","updated":1704388122468,"created":1703951617977,"nav_order":1,"custom":{"nav_order":1},"fname":"programming.language.swift.Types","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"c89e31d268dcccc84002ed6763ba2666","links":[{"type":"wiki","from":{"fname":"programming.language.swift.Types","id":"mr2culexmtziuklrq2gt22f","vaultName":"Dendron"},"value":"programming.language.swift.performance","position":{"start":{"line":125,"column":13,"offset":2823},"end":{"line":125,"column":55,"offset":2865},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"programming.language.swift.performance"}}],"anchors":{"usage-overview":{"type":"header","text":"Usage Overview","value":"usage-overview","line":9,"column":0,"depth":2},"main-difference-between-struct--class":{"type":"header","text":"Main Difference between Struct & Class","value":"main-difference-between-struct--class","line":19,"column":0,"depth":2},"value-type--reference-type":{"type":"header","text":"Value Type , Reference Type","value":"value-type--reference-type","line":27,"column":0,"depth":3},"value-type":{"type":"header","text":"value type:","value":"value-type","line":31,"column":0,"depth":4},"reference-type":{"type":"header","text":"reference type:","value":"reference-type","line":38,"column":0,"depth":4},"static-dispatch-vs-dynamic-dispatch":{"type":"header","text":"Static Dispatch vs Dynamic Dispatch","value":"static-dispatch-vs-dynamic-dispatch","line":45,"column":0,"depth":3},"method-dispatch":{"type":"header","text":"Method dispatch","value":"method-dispatch","line":47,"column":0,"depth":4},"which-to-choose-struct-or-class":{"type":"header","text":"Which to choose, Struct or Class?","value":"which-to-choose-struct-or-class","line":125,"column":0,"depth":2},"situations-when-choosing-different-data-types":{"type":"header","text":"Situations when choosing different data types","value":"situations-when-choosing-different-data-types","line":134,"column":0,"depth":2},"comparison":{"type":"header","text":"Comparison","value":"comparison","line":147,"column":0,"depth":2}},"children":["e967gt61ay4vhqbij2qmofv","m30ay8bv1fkxsl30m2r9frl","2cg1kb9zlmrzfvyzu54nsrd"],"parent":"vztg7xzj0425ae5ogmk8ds2","data":{}},"body":"<h1 id=\"types\">Types<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#types\"></a></h1>\n<h2 id=\"usage-overview\">Usage Overview<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#usage-overview\"></a></h2>\n<ul>\n<li>class, struct</li>\n</ul>\n<blockquote>\n<p>Model custom types that encapsulate data.</p>\n</blockquote>\n<ul>\n<li>enum</li>\n</ul>\n<blockquote>\n<p>Model custom types that define a list of possible values.</p>\n</blockquote>\n<h2 id=\"main-difference-between-struct--class\">Main Difference between <code>Struct</code> &#x26; <code>Class</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#main-difference-between-struct--class\"></a></h2>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th> </th><th align=\"center\">Struct</th><th align=\"center\">Class</th></tr></thead><tbody><tr><td>pass by</td><td align=\"center\">value</td><td align=\"center\">reference</td></tr><tr><td>method dispatch</td><td align=\"center\">static</td><td align=\"center\">dynamic</td></tr><tr><td>inheritance</td><td align=\"center\">X</td><td align=\"center\">V</td></tr></tbody></table></div>\n<h3 id=\"value-type--reference-type\">Value Type , Reference Type<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#value-type--reference-type\"></a></h3>\n<p>在記憶體中的儲存和管理方式不同</p>\n<h4 id=\"value-type\">value type:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#value-type\"></a></h4>\n<ul>\n<li>通常較小，且輕量，因為儲存的是實際數據的<code>值</code>，可以直接存在<code>Stack</code>上</li>\n<li>pass by value（CoW）</li>\n</ul>\n<p><img src=\"/programming_notes/assets/images/programming.language.swift.Types.value-type.png\" alt=\"value type\"></p>\n<h4 id=\"reference-type\">reference type:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#reference-type\"></a></h4>\n<ul>\n<li>可能較大，因為儲存的是對實際數據的<code>引用</code>，可能會包含其他資訊(類型訊息、ARC相關訊息)</li>\n<li>pass by reference</li>\n</ul>\n<p><img src=\"/programming_notes/assets/images/programming.language.swift.Types.reference-type.png\" alt=\"reference type\"></p>\n<h3 id=\"static-dispatch-vs-dynamic-dispatch\">Static Dispatch vs Dynamic Dispatch<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#static-dispatch-vs-dynamic-dispatch\"></a></h3>\n<h4 id=\"method-dispatch\">Method dispatch<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#method-dispatch\"></a></h4>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th> </th><th align=\"center\">initial Declaration</th><th align=\"center\">Extension</th></tr></thead><tbody><tr><td>Value Type(struct, enum)</td><td align=\"center\">Static</td><td align=\"center\">Static</td></tr><tr><td>Protocol</td><td align=\"center\">Table</td><td align=\"center\">Static</td></tr><tr><td>Class</td><td align=\"center\">Table</td><td align=\"center\">Static</td></tr><tr><td>NSObject Subclass</td><td align=\"center\">Table</td><td align=\"center\">Message</td></tr></tbody></table></div>\n<ul>\n<li>\n<p>Dynamic dispatch example</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">protocol</span> <span class=\"token class-name\">Dispatch</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">testDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">extension</span> <span class=\"token class-name\">Dispatch</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">shared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\"><span class=\"token literal constant\">#function</span></span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> from protocol extension\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Dispatch</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">testDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\"><span class=\"token literal constant\">#function</span></span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> from A\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">testDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\"><span class=\"token literal constant\">#function</span></span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> from B\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">shared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\"><span class=\"token literal constant\">#function</span></span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> from B\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> a<span class=\"token punctuation\">:</span> <span class=\"token class-name\">A</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\na<span class=\"token punctuation\">.</span><span class=\"token function\">testDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">shared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n</li>\n</ul>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// 1. Value Type (Struct): All Static Dispatch</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">isHungry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Bool</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Static</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">extension</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">String</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Static</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 2. Protocol: Table &#x26; Static</span>\n<span class=\"token keyword\">protocol</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">isCute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Bool</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Table</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">extension</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">canGetAngry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Bool</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Static</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 3. Class</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">isCute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Bool</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Table</span>\n    <span class=\"token comment\">// add @objc &#x26; dynamic keyword</span>\n    <span class=\"token attribute atrule\">@objc</span> <span class=\"token keyword\">dynamic</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">hoursSleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Table -> Message</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">extension</span> <span class=\"token class-name\">Dog</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">canBite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Bool</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Static</span>\n    <span class=\"token comment\">// add @objc keyword</span>\n    <span class=\"token attribute atrule\">@objc</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">goWild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Static -> Message</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// add final keyword</span>\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">canCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Bool</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Table -> Static</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"which-to-choose-struct-or-class\">Which to choose, <code>Struct</code> or <code>Class</code>?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#which-to-choose-struct-or-class\"></a></h2>\n<blockquote>\n<p>The additional capabilities that classes support come at the cost of increased complexity. As a general guideline, prefer structures because they’re easier to reason about, and use classes when they’re appropriate or necessary. In practice, this means most of the custom types you define will be structures and enumerations.</p>\n</blockquote>\n<ul>\n<li>Use Classes When You Need Objective-C Interoperability</li>\n<li>Use Classes When You Need to Control Identity</li>\n</ul>\n<p>Always keep <a href=\"/programming_notes/notes/y4x1bbpym9389xf1pj71s7z\">Performance</a> principle in mind</p>\n<h2 id=\"situations-when-choosing-different-data-types\">Situations when choosing different data types<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#situations-when-choosing-different-data-types\"></a></h2>\n<ol>\n<li>\n<p>Structs:</p>\n<ol>\n<li>Data Models</li>\n<li>SwiftUI Views</li>\n</ol>\n</li>\n<li>\n<p>Classes:</p>\n<ol>\n<li>ViewModels</li>\n<li>KVO</li>\n</ol>\n</li>\n<li>\n<p>Actors:</p>\n<ol>\n<li>Shared 'Manager' / 'Data Store'</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"comparison\">Comparison<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#comparison\"></a></h2>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th> </th><th align=\"center\">Struct</th><th align=\"center\">Class</th><th align=\"center\">Actor</th><th align=\"center\">Enum</th></tr></thead><tbody><tr><td>Stored in</td><td align=\"center\">Stack</td><td align=\"center\">Heap</td><td align=\"center\">Heap</td><td align=\"center\">Stack</td></tr><tr><td>copy by</td><td align=\"center\">Value</td><td align=\"center\">Reference</td><td align=\"center\">Reference</td><td align=\"center\">Value</td></tr><tr><td>Thread safe</td><td align=\"center\">不一定</td><td align=\"center\">X</td><td align=\"center\">V</td><td align=\"center\">V</td></tr><tr><td>Inheritance</td><td align=\"center\">X</td><td align=\"center\">V</td><td align=\"center\">X</td><td align=\"center\">X</td></tr></tbody></table></div>\n<p>References:</p>\n<ul>\n<li><a href=\"https://www.backblaze.com/blog/whats-the-diff-programs-processes-and-threads/\">https://www.backblaze.com/blog/whats-the-diff-programs-processes-and-threads/</a></li>\n</ul>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/programming_notes/notes/e967gt61ay4vhqbij2qmofv\">Class</a></li>\n<li><a href=\"/programming_notes/notes/2cg1kb9zlmrzfvyzu54nsrd\">Struct</a></li>\n<li><a href=\"/programming_notes/notes/m30ay8bv1fkxsl30m2r9frl\">Enumeration</a></li>\n</ol>","noteIndex":{"id":"root","title":"My Second Brain","desc":"","updated":1703774418339,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"ce2f2d82cf7fe71b3a5900a8f91fd111","links":[],"anchors":{"welcome-to-my-learning-repository-":{"type":"header","text":"Welcome to my learning repository! 📚","value":"welcome-to-my-learning-repository-","line":8,"column":0,"depth":2}},"children":["j416lb0sk2vag9yvgr9bxzb","ski4xep9sjz6v7rxjf1fln1","avquk6puzxi790rxzodnfmh","rn0e0y5coqo8iyqfxd7ocsk"],"parent":null,"data":{},"body":"\n## Welcome to my learning repository! 📚\n\n**Disclaimer:**\n\nThe content in this repository is a work in progress and should not be considered an authoritative source of information. These notes are currently being compiled during my learning journey at AppWorks School. They are subject to change, and there may be gaps in organization and accuracy.\n\n**Note Status:**\n\nI am actively working on organizing and rectifying any inaccuracies. Expect a more comprehensive set of notes by 2024/01/19.\n\n**Reading guide:**\n\n> Block quotes like this generally means this paragraph is quoted by official documentation.\n\n```swift\n// Example code is typically simplified and may not be practical in real-world scenarios.\n// It is created solely to aid my understanding of the underlying concepts related to a specific topic.\n```\n\nFeel free to connect with me and share your thoughts or suggestions regarding my note-taking process. I appreciate any feedback and collaboration to enhance the quality of these notes.\n\nHappy learning! 🚀"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://qazwsx521943.github.io","assetsPrefix":"/programming_notes","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}