{"pageProps":{"note":{"id":"dy8x4ijvphppvx2ruts6lxv","title":"Concurrency","desc":"","updated":1701526535396,"created":1700900576550,"custom":{},"fname":"programming.side projects.flavor flash journal.concurrency","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"6e5355e031238c602d3e53973f4774fb","links":[],"anchors":{"download-image":{"type":"header","text":"Download image","value":"download-image","line":8,"column":0,"depth":2},"old-way-escaping-closure":{"type":"header","text":"Old way (escaping closure)","value":"old-way-escaping-closure","line":10,"column":0,"depth":3},"new-way-async-await":{"type":"header","text":"New way (async await)","value":"new-way-async-await","line":44,"column":0,"depth":3},"how-to-load-multiple-images-concurrently":{"type":"header","text":"How to load multiple images concurrently?","value":"how-to-load-multiple-images-concurrently","line":58,"column":0,"depth":2},"problem-loading-images-in-a-task-context-loads-by-serial":{"type":"header","text":"Problem: loading images in a Task context loads by serial","value":"problem-loading-images-in-a-task-context-loads-by-serial","line":60,"column":0,"depth":3},"solution-1-split-in-different-task":{"type":"header","text":"Solution 1: Split in different Task","value":"solution-1-split-in-different-task","line":95,"column":0,"depth":3},"solution-2-async-let":{"type":"header","text":"Solution 2: async let","value":"solution-2-async-let","line":122,"column":0,"depth":3},"solution-3-taskgroup":{"type":"header","text":"Solution 3: TaskGroup","value":"solution-3-taskgroup","line":139,"column":0,"depth":3},"sdk-不支援-async-await-使用completionhandler":{"type":"header","text":"SDK 不支援 async await （使用completionHandler）","value":"sdk-不支援-async-await-使用completionhandler","line":172,"column":0,"depth":2},"solution-使用withcheckedthrowingcontinuation包":{"type":"header","text":"Solution: 使用withCheckedThrowingContinuation包","value":"solution-使用withcheckedthrowingcontinuation包","line":174,"column":0,"depth":3},"問題-在還沒有actor之前要如何解決不同物件之間對同一個class的存取修改":{"type":"header","text":"問題： 在還沒有actor之前，要如何解決不同物件之間對同一個class的存取/修改？","value":"問題-在還沒有actor之前要如何解決不同物件之間對同一個class的存取修改","line":193,"column":0,"depth":2},"what-is-global-actors":{"type":"header","text":"What is global Actors?","value":"what-is-global-actors","line":197,"column":0,"depth":2},"what-is-mainactor":{"type":"header","text":"What is @MainActor?","value":"what-is-mainactor","line":199,"column":0,"depth":2},"what-is-sendable-protocol":{"type":"header","text":"What is Sendable protocol?","value":"what-is-sendable-protocol","line":205,"column":0,"depth":2},"manage-strong--weak-reference-with-async--await":{"type":"header","text":"Manage strong & weak reference with Async / Await?","value":"manage-strong--weak-reference-with-async--await","line":211,"column":0,"depth":2},"mvvm-中使用async--await-的-pattern":{"type":"header","text":"MVVM 中使用Async / Await 的 Pattern","value":"mvvm-中使用async--await-的-pattern","line":217,"column":0,"depth":2}},"children":[],"parent":"gzy1xz97zvnttb8urqpfhh3","data":{}},"body":"<h1 id=\"concurrency\">Concurrency<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#concurrency\"></a></h1>\n<h2 id=\"download-image\">Download image<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#download-image\"></a></h2>\n<h3 id=\"old-way-escaping-closure\">Old way (escaping closure)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#old-way-escaping-closure\"></a></h3>\n<p>URLSession + escaping completionHandler closure</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">responseHandler</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> data<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Data</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span><span class=\"token omit keyword\">_</span> response<span class=\"token punctuation\">:</span> <span class=\"token class-name\">URLResponse</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">UIImage</span><span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">guard</span>\n        <span class=\"token keyword\">let</span> data<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">let</span> image <span class=\"token operator\">=</span> <span class=\"token class-name\">UIImage</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">let</span> response <span class=\"token operator\">=</span> response <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> <span class=\"token class-name\">HTTPURLResponse</span><span class=\"token punctuation\">,</span>\n        response<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">>=</span> <span class=\"token number\">200</span> <span class=\"token operator\">&#x26;&#x26;</span> response<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">300</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token nil constant\">nil</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> image\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// old school</span>\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">downloadWithEscaping</span><span class=\"token punctuation\">(</span>completionHandler<span class=\"token punctuation\">:</span> <span class=\"token attribute atrule\">@escaping</span> <span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> image<span class=\"token punctuation\">:</span> <span class=\"token class-name\">UIImage</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token omit keyword\">_</span> error<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Error</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">URLSession</span><span class=\"token punctuation\">.</span>shared<span class=\"token punctuation\">.</span><span class=\"token function\">dataTask</span><span class=\"token punctuation\">(</span>with<span class=\"token punctuation\">:</span> <span class=\"token function\">URL</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"xxx\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">weak</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">let</span> image <span class=\"token operator\">=</span> <span class=\"token function\">responseHandler</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">completionHandler</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// with combine</span>\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">downloadWithCombine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">AnyPublisher</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">UIImage</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Error</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">URLSession</span><span class=\"token punctuation\">.</span>shared<span class=\"token punctuation\">.</span><span class=\"token function\">dataTaskPublisher</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">:</span> url<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>responseHandler<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span>mapError <span class=\"token punctuation\">{</span> <span class=\"token short-argument\">$0</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">eraseToAnyPublisher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"new-way-async-await\">New way (async await)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#new-way-async-await\"></a></h3>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">downloadWithAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">throws</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">UIImage</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">(</span>imageData<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> <span class=\"token class-name\">URLSession</span><span class=\"token punctuation\">.</span>shared<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>from<span class=\"token punctuation\">:</span> <span class=\"token function\">URL</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"xxx\"</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">guard</span> <span class=\"token keyword\">let</span> image <span class=\"token operator\">=</span> <span class=\"token function\">responseHandler</span><span class=\"token punctuation\">(</span>imageData<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token class-name\">URLError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span>badServerResponse<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> image\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"how-to-load-multiple-images-concurrently\">How to load multiple images concurrently?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how-to-load-multiple-images-concurrently\"></a></h2>\n<h3 id=\"problem-loading-images-in-a-task-context-loads-by-serial\">Problem: loading images in a Task context loads by serial<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#problem-loading-images-in-a-task-context-loads-by-serial\"></a></h3>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">AsyncLetView</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attribute atrule\">@State</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> images<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">UIImage</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token attribute atrule\">@StateObject</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> loadImageViewModel <span class=\"token operator\">=</span> <span class=\"token class-name\">LoadImageViewModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">let</span> columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">GridItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token function\">flexible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">GridItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token function\">flexible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">var</span> body<span class=\"token punctuation\">:</span> <span class=\"token keyword\">some</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">LazyVGrid</span><span class=\"token punctuation\">(</span>columns<span class=\"token punctuation\">:</span> columns<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">ForEach</span><span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> image <span class=\"token keyword\">in</span>\n                <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span>uiImage<span class=\"token punctuation\">:</span> image<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">resizable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">scaledToFit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">frame</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">.</span>onAppear <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Task</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">let</span> image1 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> loadImageViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">fetchImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">let</span> image2 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> loadImageViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">fetchImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>image2<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">let</span> image3 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> loadImageViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">fetchImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>image3<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">let</span> image4 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> loadImageViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">fetchImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>image4<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"solution-1-split-in-different-task\">Solution 1: Split in different Task<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#solution-1-split-in-different-task\"></a></h3>\n<blockquote>\n<p>Cons: bad code</p>\n</blockquote>\n<pre class=\"language-swift\"><code class=\"language-swift\">   <span class=\"token class-name\">Task</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> image1 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> loadImageViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">fetchImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">)</span>\n\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token class-name\">Task</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> image2 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> loadImageViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">fetchImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>image2<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token class-name\">Task</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> image3 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> loadImageViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">fetchImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>image3<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token class-name\">Task</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> image4 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> loadImageViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">fetchImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>image4<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"solution-2-async-let\">Solution 2: <code>async let</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#solution-2-async-let\"></a></h3>\n<blockquote>\n<p>Cons: Better than solution 1, but still not scalable</p>\n</blockquote>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token class-name\">Task</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">let</span> fetchImage1 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> loadImageViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">fetchImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">let</span> fetchImage2 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> loadImageViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">fetchImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">let</span> fetchImage3 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> loadImageViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">fetchImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">let</span> fetchImage4 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> loadImageViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">fetchImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">,</span> image2<span class=\"token punctuation\">,</span> image3<span class=\"token punctuation\">,</span> image4<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span>fetchImage1<span class=\"token punctuation\">,</span> fetchImage2<span class=\"token punctuation\">,</span> fetchImage3<span class=\"token punctuation\">,</span> fetchImage4<span class=\"token punctuation\">)</span>\n\n    images<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>contentsOf<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>image1<span class=\"token punctuation\">,</span> image2<span class=\"token punctuation\">,</span> image3<span class=\"token punctuation\">,</span> image4<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"solution-3-taskgroup\">Solution 3: TaskGroup<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#solution-3-taskgroup\"></a></h3>\n<blockquote>\n<p>Pros: Better than above solution, clean on handling multiple tasks\nCons: Need to be careful of the error handling</p>\n</blockquote>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Codable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> id<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n\n    <span class=\"token keyword\">let</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">fetchUsersWithTaskGroup</span><span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">throws</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> users<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> <span class=\"token function\">withThrowingTaskGroup</span><span class=\"token punctuation\">(</span>of<span class=\"token punctuation\">:</span> <span class=\"token class-name\">User</span><span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> group <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">for</span> id <span class=\"token keyword\">in</span> ids <span class=\"token punctuation\">{</span>\n            group<span class=\"token punctuation\">.</span>addTask <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">try</span><span class=\"token operator\">?</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchUser</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">:</span> id<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> user <span class=\"token keyword\">in</span> group <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> user <span class=\"token punctuation\">{</span>\n                users<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">return</span> users\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"sdk-不支援-async-await-使用completionhandler\">SDK 不支援 async await （使用completionHandler）<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sdk-不支援-async-await-使用completionhandler\"></a></h2>\n<h3 id=\"solution-使用withcheckedthrowingcontinuation包\">Solution: 使用<code>withCheckedThrowingContinuation</code>包<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#solution-使用withcheckedthrowingcontinuation包\"></a></h3>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">getData</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">:</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">throws</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> withCheckedThrowingContinuation <span class=\"token punctuation\">{</span> continuation <span class=\"token keyword\">in</span>\n        <span class=\"token class-name\">URLSession</span><span class=\"token punctuation\">.</span>shared<span class=\"token punctuation\">.</span><span class=\"token function\">dataTask</span><span class=\"token punctuation\">(</span>with<span class=\"token punctuation\">:</span> url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> error <span class=\"token keyword\">in</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> data <span class=\"token punctuation\">{</span>\n                continuation<span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span>returning<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> error <span class=\"token punctuation\">{</span>\n                continuation<span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span>throwing<span class=\"token punctuation\">:</span> error<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                continuation<span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span>throwing<span class=\"token punctuation\">:</span> <span class=\"token class-name\">URLError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span>badURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"問題-在還沒有actor之前要如何解決不同物件之間對同一個class的存取修改\">問題： 在還沒有actor之前，要如何解決不同物件之間對同一個class的存取/修改？<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#問題-在還沒有actor之前要如何解決不同物件之間對同一個class的存取修改\"></a></h2>\n<p>A: 在有可能被同時存取的class中宣告特定的Queue，規範某些需要排隊處理的操作。</p>\n<h2 id=\"what-is-global-actors\">What is global Actors?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what-is-global-actors\"></a></h2>\n<h2 id=\"what-is-mainactor\">What is <code>@MainActor</code>?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what-is-mainactor\"></a></h2>\n<p>當某個資料會影響到UI時，會需要標記<code>@MainActor</code>，告訴compiler說這個資料需要在main thread做更新才可以確保thread safety。</p>\n<p>通常在有標記<code>@Published</code>的variable都會需要標記<code>@MainActor</code>，或是直接在viewModel標記也可以。</p>\n<h2 id=\"what-is-sendable-protocol\">What is Sendable protocol?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what-is-sendable-protocol\"></a></h2>\n<p>當某個type遵守<code>Sendable</code>協議時，並不需要特別定義properties或methods，只是要確保在併發環境下，某個property可以保證thread safe就是符合<code>Sendable</code>協議。</p>\n<blockquote>\n<p>定義struct時，通常就默認遵守Sendable (value types)</p>\n</blockquote>\n<h2 id=\"manage-strong--weak-reference-with-async--await\">Manage strong &#x26; weak reference with Async / Await?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#manage-strong--weak-reference-with-async--await\"></a></h2>\n<p>通常不需要在Task呼叫的closure中做weak self的記憶體管理，而是在Task層面。</p>\n<p>如果在ViewModel中做了很多async await的操作，可以將Task的Reference紀錄起來，當View disappear的時候去一一cancel還正在執行的Task。</p>\n<h2 id=\"mvvm-中使用async--await-的-pattern\">MVVM 中使用Async / Await 的 Pattern<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#mvvm-中使用async--await-的-pattern\"></a></h2>\n<p>相較於在View中使用Task包住ViewModel的function，如果情況允許的話，在ViewModel的function中用Task包住concurrent的code會比較好管理這些Task。</p>","noteIndex":{"id":"root","title":"My Second Brain","desc":"","updated":1703774418339,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"ce2f2d82cf7fe71b3a5900a8f91fd111","links":[],"anchors":{"welcome-to-my-learning-repository-":{"type":"header","text":"Welcome to my learning repository! 📚","value":"welcome-to-my-learning-repository-","line":8,"column":0,"depth":2}},"children":["j416lb0sk2vag9yvgr9bxzb","ski4xep9sjz6v7rxjf1fln1","avquk6puzxi790rxzodnfmh","rn0e0y5coqo8iyqfxd7ocsk"],"parent":null,"data":{},"body":"\n## Welcome to my learning repository! 📚\n\n**Disclaimer:**\n\nThe content in this repository is a work in progress and should not be considered an authoritative source of information. These notes are currently being compiled during my learning journey at AppWorks School. They are subject to change, and there may be gaps in organization and accuracy.\n\n**Note Status:**\n\nI am actively working on organizing and rectifying any inaccuracies. Expect a more comprehensive set of notes by 2024/01/19.\n\n**Reading guide:**\n\n> Block quotes like this generally means this paragraph is quoted by official documentation.\n\n```swift\n// Example code is typically simplified and may not be practical in real-world scenarios.\n// It is created solely to aid my understanding of the underlying concepts related to a specific topic.\n```\n\nFeel free to connect with me and share your thoughts or suggestions regarding my note-taking process. I appreciate any feedback and collaboration to enhance the quality of these notes.\n\nHappy learning! 🚀"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://qazwsx521943.github.io","assetsPrefix":"/programming_notes","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}