{"pageProps":{"note":{"id":"2ho1m3s6l88vvkis0fk0zwq","title":"Concurrency","desc":"","updated":1704531229369,"created":1704447754272,"custom":{},"fname":"programming.language.swift.concurrency","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"471797459c095271dcf4e6b3cb7497d1","links":[],"anchors":{"whats-the-benefits-of-using-this-new-concurrency-model":{"type":"header","text":"What's the benefits of using this new concurrency model?","value":"whats-the-benefits-of-using-this-new-concurrency-model","line":8,"column":0,"depth":2},"basic-syntax":{"type":"header","text":"Basic syntax","value":"basic-syntax","line":88,"column":0,"depth":2},"what-is-a-sendable-protocol":{"type":"header","text":"What is a Sendable Protocol?","value":"what-is-a-sendable-protocol","line":110,"column":0,"depth":2},"asyncsequence-protocol":{"type":"header","text":"AsyncSequence protocol","value":"asyncsequence-protocol","line":125,"column":0,"depth":2}},"children":["0swgx3xcko1wm5cfll7nvah","4momin9k0ledbifglklmqyv"],"parent":"vztg7xzj0425ae5ogmk8ds2","data":{}},"body":"<h1 id=\"concurrency\">Concurrency<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#concurrency\"></a></h1>\n<h2 id=\"whats-the-benefits-of-using-this-new-concurrency-model\">What's the benefits of using this new concurrency model?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#whats-the-benefits-of-using-this-new-concurrency-model\"></a></h2>\n<ul>\n<li>No more nested completionHandlers -> Big improvement in Readability</li>\n<li>Reduce the risk of thread explosion</li>\n<li>Introduces <code>Actor</code>, reducing the race conditions risks.</li>\n</ul>\n<p>以之前Stylish登入然後拿使用者資料為例，我們需要依序做三件事，因為每個Task都依賴於前一個Task拿到的資訊：</p>\n<ol>\n<li>拿fbToken</li>\n<li>拿stylishToken</li>\n<li>拿User資料</li>\n</ol>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// 以下的code都是示意而已，無法在 playground 測試，且不考量error handling</span>\n<span class=\"token keyword\">typealias</span> <span class=\"token class-name\">Token</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n    <span class=\"token keyword\">let</span> id<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n    getFBToken <span class=\"token punctuation\">{</span> fbToken <span class=\"token keyword\">in</span>\n        <span class=\"token function\">loginWithFB</span><span class=\"token punctuation\">(</span>fbToken<span class=\"token punctuation\">:</span> fbToken<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> stylishToken <span class=\"token keyword\">in</span>\n            <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">:</span> stylishToken<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> user <span class=\"token keyword\">in</span>\n                <span class=\"token keyword\">return</span> user\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">getFBToken</span><span class=\"token punctuation\">(</span>completionHandler<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Token</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> tokenString<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Token</span>\n    <span class=\"token comment\">// get token by facebook sdk</span>\n    <span class=\"token function\">completionHandler</span><span class=\"token punctuation\">(</span>tokenString<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">loginWithFB</span><span class=\"token punctuation\">(</span>fbToken<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Token</span><span class=\"token punctuation\">,</span> completionHandler<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Token</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> stylishToken<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Token</span>\n    <span class=\"token comment\">// login stylish by fb token</span>\n    <span class=\"token function\">completionHandler</span><span class=\"token punctuation\">(</span>stylishToken<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">getUserData</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Token</span><span class=\"token punctuation\">,</span> completionHandler<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// get user data by stylish token</span>\n    <span class=\"token function\">completionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"John\"</span></span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"123\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>如果用async await</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> fbToken <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getFBToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> stylishToken <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">loginWithFB</span><span class=\"token punctuation\">(</span>fbToken<span class=\"token punctuation\">:</span> fbToken<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">:</span> stylishToken<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> user\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">getFBToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Token</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> tokenString<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Token</span>\n    <span class=\"token comment\">// get token by facebook sdk</span>\n    <span class=\"token keyword\">return</span> tokenString\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">loginWithFB</span><span class=\"token punctuation\">(</span>fbToken<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Token</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Token</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> stylishToken<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Token</span>\n    <span class=\"token comment\">// login stylish by fb token</span>\n    <span class=\"token keyword\">return</span> stylishToken\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">getUserData</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Token</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// get user data by stylish token</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"John\"</span></span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"123\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>很明顯的感受到一樣的功能，使用async await語法可以讓可讀性增加不少，就連沒學過程式的人可能都看得懂。</p>\n<h2 id=\"basic-syntax\">Basic syntax<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#basic-syntax\"></a></h2>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">throws</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token keyword\">await</span> <span class=\"token class-name\">Task</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span><span class=\"token function\">seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"successed\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>★ 當程式碼執行到<code>await</code>會發生什麼事？</p>\n<p>當程式碼執行遇到<code>await</code>時，是告訴系統說接下來的任務是異步的(會需要時間執行)，為了不要讓他卡在當前的thread上導致其他任務無法執行，他會暫停當前這個異步任務在當前線程的執行，先讓其他任務在該線程上執行。</p>\n<p>等到<code>await</code>後面的異步任務執行完後Swift runtime會確保回到原本的thread在適當的時候繼續執行接下來的code。</p>\n<ul>\n<li>遇到<code>await</code>，暫定的是方法，不是thread</li>\n<li>暫停的前後有可能會切換到不同的 thread 執行</li>\n</ul>\n<p>所以這個5.5出來的concurrency model做了什麼？</p>\n<ul>\n<li>他弱化了開發者對\"<strong>Thread</strong>\"的概念，讓線程的創建完全由concurrency model做判斷</li>\n</ul>\n<h2 id=\"what-is-a-sendable-protocol\">What is a <code>Sendable</code> Protocol?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what-is-a-sendable-protocol\"></a></h2>\n<p>★ <code>Sendable</code> protocol 是一個<code>Marker protocol</code>，他不要求任何實作，不能做conditional cast</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> isSendable <span class=\"token operator\">=</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span> <span class=\"token keyword\">is</span> <span class=\"token class-name\">Sendable</span>  <span class=\"token comment\">// error: Marker protocol 'Sendable' cannot be used in a conditional cast.</span>\n</code></pre>\n<blockquote>\n<p>A type that can be shared from one concurrency domain to another is known as a sendable type.\nYou mark a type as being sendable by declaring conformance to the Sendable protocol.</p>\n</blockquote>\n<p>可以在多線程環境下共享的類別，我們就稱他是一個Sendable的類別。</p>\n<p>從</p>\n<h2 id=\"asyncsequence-protocol\">AsyncSequence protocol<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#asyncsequence-protocol\"></a></h2>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/programming_notes/notes/0swgx3xcko1wm5cfll7nvah\">Actors</a></li>\n<li><a href=\"/programming_notes/notes/4momin9k0ledbifglklmqyv\">Task &#x26; TaskGroup</a></li>\n</ol>","noteIndex":{"id":"root","title":"My Second Brain","desc":"","updated":1703774418339,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"ce2f2d82cf7fe71b3a5900a8f91fd111","links":[],"anchors":{"welcome-to-my-learning-repository-":{"type":"header","text":"Welcome to my learning repository! 📚","value":"welcome-to-my-learning-repository-","line":8,"column":0,"depth":2}},"children":["j416lb0sk2vag9yvgr9bxzb","ski4xep9sjz6v7rxjf1fln1","avquk6puzxi790rxzodnfmh","rn0e0y5coqo8iyqfxd7ocsk"],"parent":null,"data":{},"body":"\n## Welcome to my learning repository! 📚\n\n**Disclaimer:**\n\nThe content in this repository is a work in progress and should not be considered an authoritative source of information. These notes are currently being compiled during my learning journey at AppWorks School. They are subject to change, and there may be gaps in organization and accuracy.\n\n**Note Status:**\n\nI am actively working on organizing and rectifying any inaccuracies. Expect a more comprehensive set of notes by 2024/01/19.\n\n**Reading guide:**\n\n> Block quotes like this generally means this paragraph is quoted by official documentation.\n\n```swift\n// Example code is typically simplified and may not be practical in real-world scenarios.\n// It is created solely to aid my understanding of the underlying concepts related to a specific topic.\n```\n\nFeel free to connect with me and share your thoughts or suggestions regarding my note-taking process. I appreciate any feedback and collaboration to enhance the quality of these notes.\n\nHappy learning! 🚀"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://qazwsx521943.github.io","assetsPrefix":"/programming_notes","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}